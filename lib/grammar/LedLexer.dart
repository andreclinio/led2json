// Generated from grammar/Led.g4 by ANTLR 4.11.1
// ignore_for_file: unused_import, unused_local_variable, prefer_single_quotes
import 'package:antlr4/antlr4.dart';


class LedLexer extends Lexer {
  static final checkVersion = () => RuntimeMetaData.checkVersion('4.11.1', RuntimeMetaData.VERSION);

  static final List<DFA> _decisionToDFA = List.generate(
        _ATN.numberOfDecisions, (i) => DFA(_ATN.getDecisionState(i), i));
  static final PredictionContextCache _sharedContextCache = PredictionContextCache();
  static const int
    TOKEN_T__0 = 1, TOKEN_T__1 = 2, TOKEN_T__2 = 3, TOKEN_T__3 = 4, TOKEN_T__4 = 5, 
    TOKEN_T__5 = 6, TOKEN_T__6 = 7, TOKEN_T__7 = 8, TOKEN_T__8 = 9, TOKEN_EQ = 10, 
    TOKEN_COMMA = 11, TOKEN_SEMI = 12, TOKEN_LPAREN = 13, TOKEN_RPAREN = 14, 
    TOKEN_LSQUARE = 15, TOKEN_RSQUARE = 16, TOKEN_QUOTE = 17, TOKEN_INT = 18, 
    TOKEN_ID = 19, TOKEN_WS = 20, TOKEN_NEWLINE = 21, TOKEN_Q_STRING = 22;
  @override
  final List<String> channelNames = [
    'DEFAULT_TOKEN_CHANNEL', 'HIDDEN'
  ];

  @override
  final List<String> modeNames = [
    'DEFAULT_MODE'
  ];

  @override
  final List<String> ruleNames = [
    'T__0', 'T__1', 'T__2', 'T__3', 'T__4', 'T__5', 'T__6', 'T__7', 'T__8', 
    'EQ', 'COMMA', 'SEMI', 'LPAREN', 'RPAREN', 'LSQUARE', 'RSQUARE', 'QUOTE', 
    'INT', 'ID', 'WS', 'NEWLINE', 'Q_STRING'
  ];

  static final List<String?> _LITERAL_NAMES = [
      null, "'menu'", "'submenu'", "'button'", "'item'", "'dialog'", "'separator'", 
      "'fill'", "'hbox'", "'vbox'", "'='", "','", "';'", "'('", "')'", "'['", 
      "']'", "'\"'"
  ];
  static final List<String?> _SYMBOLIC_NAMES = [
      null, null, null, null, null, null, null, null, null, null, "EQ", 
      "COMMA", "SEMI", "LPAREN", "RPAREN", "LSQUARE", "RSQUARE", "QUOTE", 
      "INT", "ID", "WS", "NEWLINE", "Q_STRING"
  ];
  static final Vocabulary VOCABULARY = VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

  @override
  Vocabulary get vocabulary {
    return VOCABULARY;
  }


  LedLexer(CharStream input) : super(input) {
    interpreter = LexerATNSimulator(_ATN, _decisionToDFA, _sharedContextCache, recog: this);
  }

  @override
  List<int> get serializedATN => _serializedATN;

  @override
  String get grammarFileName => 'Led.g4';

  @override
  ATN getATN() { return _ATN; }

  static const List<int> _serializedATN = [
      4,0,22,153,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
      6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,
      13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,
      7,20,2,21,7,21,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
      1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,
      4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,
      1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,
      1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,4,17,120,
      8,17,11,17,12,17,121,1,18,1,18,5,18,126,8,18,10,18,12,18,129,9,18,
      1,19,4,19,132,8,19,11,19,12,19,133,1,19,1,19,1,20,4,20,139,8,20,11,
      20,12,20,140,1,20,1,20,1,21,1,21,5,21,147,8,21,10,21,12,21,150,9,21,
      1,21,1,21,0,0,22,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
      11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
      22,1,0,6,1,0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,
      122,2,0,9,9,32,32,2,0,10,10,13,13,3,0,10,10,13,13,34,34,157,0,1,1,
      0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
      0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,
      23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
      1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,
      0,0,0,1,45,1,0,0,0,3,50,1,0,0,0,5,58,1,0,0,0,7,65,1,0,0,0,9,70,1,0,
      0,0,11,77,1,0,0,0,13,87,1,0,0,0,15,92,1,0,0,0,17,97,1,0,0,0,19,102,
      1,0,0,0,21,104,1,0,0,0,23,106,1,0,0,0,25,108,1,0,0,0,27,110,1,0,0,
      0,29,112,1,0,0,0,31,114,1,0,0,0,33,116,1,0,0,0,35,119,1,0,0,0,37,123,
      1,0,0,0,39,131,1,0,0,0,41,138,1,0,0,0,43,144,1,0,0,0,45,46,5,109,0,
      0,46,47,5,101,0,0,47,48,5,110,0,0,48,49,5,117,0,0,49,2,1,0,0,0,50,
      51,5,115,0,0,51,52,5,117,0,0,52,53,5,98,0,0,53,54,5,109,0,0,54,55,
      5,101,0,0,55,56,5,110,0,0,56,57,5,117,0,0,57,4,1,0,0,0,58,59,5,98,
      0,0,59,60,5,117,0,0,60,61,5,116,0,0,61,62,5,116,0,0,62,63,5,111,0,
      0,63,64,5,110,0,0,64,6,1,0,0,0,65,66,5,105,0,0,66,67,5,116,0,0,67,
      68,5,101,0,0,68,69,5,109,0,0,69,8,1,0,0,0,70,71,5,100,0,0,71,72,5,
      105,0,0,72,73,5,97,0,0,73,74,5,108,0,0,74,75,5,111,0,0,75,76,5,103,
      0,0,76,10,1,0,0,0,77,78,5,115,0,0,78,79,5,101,0,0,79,80,5,112,0,0,
      80,81,5,97,0,0,81,82,5,114,0,0,82,83,5,97,0,0,83,84,5,116,0,0,84,85,
      5,111,0,0,85,86,5,114,0,0,86,12,1,0,0,0,87,88,5,102,0,0,88,89,5,105,
      0,0,89,90,5,108,0,0,90,91,5,108,0,0,91,14,1,0,0,0,92,93,5,104,0,0,
      93,94,5,98,0,0,94,95,5,111,0,0,95,96,5,120,0,0,96,16,1,0,0,0,97,98,
      5,118,0,0,98,99,5,98,0,0,99,100,5,111,0,0,100,101,5,120,0,0,101,18,
      1,0,0,0,102,103,5,61,0,0,103,20,1,0,0,0,104,105,5,44,0,0,105,22,1,
      0,0,0,106,107,5,59,0,0,107,24,1,0,0,0,108,109,5,40,0,0,109,26,1,0,
      0,0,110,111,5,41,0,0,111,28,1,0,0,0,112,113,5,91,0,0,113,30,1,0,0,
      0,114,115,5,93,0,0,115,32,1,0,0,0,116,117,5,34,0,0,117,34,1,0,0,0,
      118,120,7,0,0,0,119,118,1,0,0,0,120,121,1,0,0,0,121,119,1,0,0,0,121,
      122,1,0,0,0,122,36,1,0,0,0,123,127,7,1,0,0,124,126,7,2,0,0,125,124,
      1,0,0,0,126,129,1,0,0,0,127,125,1,0,0,0,127,128,1,0,0,0,128,38,1,0,
      0,0,129,127,1,0,0,0,130,132,7,3,0,0,131,130,1,0,0,0,132,133,1,0,0,
      0,133,131,1,0,0,0,133,134,1,0,0,0,134,135,1,0,0,0,135,136,6,19,0,0,
      136,40,1,0,0,0,137,139,7,4,0,0,138,137,1,0,0,0,139,140,1,0,0,0,140,
      138,1,0,0,0,140,141,1,0,0,0,141,142,1,0,0,0,142,143,6,20,0,0,143,42,
      1,0,0,0,144,148,3,33,16,0,145,147,8,5,0,0,146,145,1,0,0,0,147,150,
      1,0,0,0,148,146,1,0,0,0,148,149,1,0,0,0,149,151,1,0,0,0,150,148,1,
      0,0,0,151,152,3,33,16,0,152,44,1,0,0,0,6,0,121,127,133,140,148,1,6,
      0,0
  ];

  static final ATN _ATN =
      ATNDeserializer().deserialize(_serializedATN);
}